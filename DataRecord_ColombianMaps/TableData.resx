<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Piu5/2fM/weiVe2/CdMLvgAAAABJRU5ErkJggg==
</value>
  </data>
</root>